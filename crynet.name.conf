server
{
  server_name www.crynet.name;
  return 301 $scheme://crynet.name$request_uri;

  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/crynet.name/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/crynet.name/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server
{
  server_name crynet.name;

  #STORE the nginx access logs for this app here
  access_log /var/log/nginx/crynet.name.access.log;
  #Store the error logs for this app here
  error_log /var/log/nginx/crynet.name.error.log;

  location /
  {
    root /var/www/html/crynet.name/client/dist;
    index index.html index.htm;
  }

  location ^~ /static/image
  {
    alias /var/www/html/crynet.name/static/image;
  }

  #REST API BACKEND CONFIG
  location /api
  {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass https://localhost:5000;
    proxy_ssl_session_reuse off;
    proxy_set_header Host $http_host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
  }

  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/crynet.name/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/crynet.name/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server
{
  if ($host = crynet.name) {
    return 301 https://$host$request_uri;
  } # managed by Certbot

  listen 80;
  server_name crynet.name;
  return 404; # managed by Certbot
}

server
{
  if ($host = www.crynet.name) {
    return 301 https://$host$request_uri;
  } # managed by Certbot

  listen 80;
  server_name www.crynet.name;
  return 404; # managed by Certbot
}